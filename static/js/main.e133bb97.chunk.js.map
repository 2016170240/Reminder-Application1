{"version":3,"sources":["reducers/index.js","Action Types/index.js","components/App.js","Action Creators/index.js","index.js"],"names":["Red1","state","action","reminders","read_cookie","type","text","date","id","Math","random","bake_cookie","console","log","filter","reminder","App","Date","render_reminder","props","map","key","className","moment","fromNow","onClick","Action_creator_REMOVE_Reminder","this","value","onChange","e","setState","target","placeholder","placeholderText","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","Action_creator_add_Reminder","Action_creator_CLEARE_Reminders","Component","connect","store","createStore","Reactdom","render","document","getElementById"],"mappings":"kLAsCeA,EApCF,WACZ,IADaC,EACd,uDADsB,GAAGC,EACzB,uCACQC,EAAY,KAEhB,OADDF,EAAOG,sBAAY,aCLM,iBDMrBF,EAAOG,MAENF,EAAS,sBAAOF,GAAP,CAAa,CAACK,KAAKJ,EAAOI,KAAKC,KAAKL,EAAOK,KAAKC,GAAGC,KAAKC,YACjEC,sBAAY,YAAYR,GACxBS,QAAQC,IAAI,eAAeV,GACpBA,GCVgB,oBDYnBD,EAAOG,MAQbF,EAAUF,EAAMa,QAAO,SAAAC,GAAQ,OAAEA,EAASP,KAAON,EAAOM,MACxDG,sBAAY,YAAYR,GACxBS,QAAQC,IAAI,UAAUV,GACfA,GCtBmB,qBDwBpBD,EAAOG,MAEbF,EAAU,GACVS,QAAQC,IAAI,UAAUV,GACtBQ,sBAAY,YAAYR,GACjBA,GAGRF,G,0EE3BCe,G,uNACFf,MAAM,CACFK,KAAK,GACLC,KAAK,IAAIU,M,EAGbC,gBAAgB,WAAK,IACVf,EAAW,EAAKgB,MAAhBhB,UAER,OACI,4BAEQA,EAAUiB,KAAI,SAAAL,GACV,OACD,wBAAIM,IAAKN,EAASP,IACd,yBAAKc,UAAU,eACf,6BAAK,yCAAqBP,EAAST,MACtC,6BAAK,qDAAiCiB,IAAO,IAAIN,KAAKF,EAASR,OAAOiB,YAEtE,yBAAKF,UAAU,eACZ,yBAAKA,UAAU,mBAAmBG,QAAS,kBAAI,EAAKN,MAAMO,+BAA+BX,EAASP,MAAlG,Y,wEAab,IAAD,OAGJ,OADAI,QAAQC,IAAIc,KAAK1B,MAAMM,MAGnB,yBAAKe,UAAU,KACf,yBAAKA,UAAU,SAEf,iDACA,2BACAM,MAAOD,KAAK1B,MAAMK,KAClBuB,SAAU,SAACC,GAAD,OAAK,EAAKC,SAAS,CAACzB,KAAKwB,EAAEE,OAAOJ,SAC5CN,UAAU,eAAejB,KAAK,OAAO4B,YAAY,8BAEzC,kBAAC,IAAD,CACAX,UAAU,oBACVM,MAAOD,KAAK1B,MAAMM,KAClB2B,gBAAgB,cACZC,SAAUR,KAAK1B,MAAMM,KACrBsB,SAAU,SAACtB,GAAU,EAAKwB,SAAS,CAACxB,UACpC6B,gBAAc,EACdC,WAAW,QACXC,cAAe,GACfC,YAAY,OACZC,WAAW,yBAGvB,4BACAf,QAAS,WAAK,EAAKN,MAAMsB,4BACrB,EAAKxC,MAAMK,KAAK,EAAKL,MAAMM,MAC3B,EAAKwB,SAAS,CAACzB,KAAK,GAAGC,KAAK,MAEhCe,UAAU,6BALV,gBAMA,4BACAG,QAAS,kBAAI,EAAKN,MAAMuB,mCAExBpB,UAAU,4BAHV,oBAMCK,KAAKT,wB,GAxEAyB,cAgFHC,eAAQ,SAAA3C,GAGnB,MAAO,CACHE,UAAYF,KAElB,CAACwC,4BC5FwC,SAACnC,EAAKC,GAE7C,IAAML,EAAS,CAEfG,KFLwB,eEMxBC,OACAC,QAIA,OADAK,QAAQC,IAAI,OAAOX,GACZA,GDkFoBwB,+BChFc,SAAClB,GAC1C,IAAMN,EAAO,CACTG,KFduB,kBEevBG,MAGJ,OADAI,QAAQC,IAAI,UAAUX,GACfA,GD0EmDwC,gCCxEhB,WAC1C,IAAMxC,EAAO,CACTG,KFrBwB,oBEyB5B,OADAO,QAAQC,IAAI,SAASX,GACdA,ID4DI0C,CAMkF5B,GEpF3F6B,EAAQC,YAAY9C,GAC1B+C,IAASC,OAGL,kBAAC,IAAD,CAAUH,MAAOA,GAAO,kBAAC,EAAD,OAEvBI,SAASC,eAAe,U","file":"static/js/main.e133bb97.chunk.js","sourcesContent":["import {ADD_REMINDER, REMOVE_REMINDER, CLEARE_REMINDERS} from '../Action Types/index'\r\nimport { bake_cookie, read_cookie } from 'sfcookies'\r\nconst Red1 = (state = [],action)=>\r\n{\r\n    let reminders = null;\r\n   state= read_cookie(\"reminders\")\r\n    if(action.type === ADD_REMINDER)\r\n    {\r\n        reminders = [...state,{text:action.text,date:action.date,id:Math.random()}];\r\n        bake_cookie(\"reminders\",reminders);\r\n        console.log(\"from reducer\",reminders);\r\n        return reminders;\r\n    }\r\n    else if(action.type === REMOVE_REMINDER)\r\n    {\r\n      /*filter function =>\r\n      betraga3 array gededa \r\n bte3mel cheak lw el reminder id mesh el action id 5odny m3ak f  el array el gededa \r\n 8er keda mata5odnesh ya3nay mat3rednesh ya3ny emsa7ny.\r\n      */\r\n      \r\n      reminders=state.filter(reminder=>reminder.id !== action.id);\r\n      bake_cookie(\"reminders\",reminders);\r\n      console.log(\"Removed\",reminders);\r\n      return reminders;\r\n    }\r\n    else if(action.type === CLEARE_REMINDERS)\r\n    {\r\n      reminders=[];\r\n      console.log(\"Cleared\",reminders);\r\n      bake_cookie(\"reminders\",reminders);\r\n      return reminders;\r\n    }\r\n   return(\r\n     state\r\n   )\r\n\r\n}\r\nexport default Red1;","export const ADD_REMINDER = \"ADD_REMINDER\";\r\nexport const REMOVE_REMINDER = \"REMOVE_REMINDER\";\r\nexport const CLEARE_REMINDERS = \"CLEARE_REMINDERS\";","import React,{Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport moment from 'moment'\r\nimport DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport '../index.css'\r\nimport {Action_creator_add_Reminder,Action_creator_REMOVE_Reminder,Action_creator_CLEARE_Reminders} from '../Action Creators/index'\r\nclass App extends Component {\r\n    state={\r\n        text:\"\",\r\n        date:new Date()\r\n    }\r\n\r\n    render_reminder=()=>{\r\n        const {reminders}=this.props;\r\n        \r\n       return(\r\n           <ul>\r\n               {\r\n                   reminders.map(reminder=>{\r\n                       return(\r\n                      <li key={reminder.id}>\r\n                          <div className=\"innerinner1\">\r\n                          <div><span>Task : </span>{reminder.text}</div>\r\n                       <div><span>The Rest Of Time : </span>{moment(new Date(reminder.date)).fromNow()}</div>\r\n                       </div>\r\n                       <div className=\"innerinner2\">\r\n                          <div className=\"btn btn-danger b\" onClick={()=>this.props.Action_creator_REMOVE_Reminder(reminder.id)}>X</div>\r\n                          </div>\r\n                          </li>\r\n                       )\r\n                   })\r\n               }\r\n           </ul>\r\n       )\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        const {x}=\"Select Time\";\r\n        console.log(this.state.date);\r\n        return(\r\n            \r\n            <div className=\"x\">\r\n            <div className=\"inner\">\r\n\r\n            <h2>What Should U DO?</h2>\r\n            <input\r\n            value={this.state.text}\r\n            onChange={(e)=>this.setState({text:e.target.value})}\r\n            className=\"form-control\" type=\"text\" placeholder=\"Enter What You Think....?\"/>\r\n            \r\n                    <DatePicker \r\n                    className=\"form-control data\" \r\n                    value={this.state.date}\r\n                    placeholderText=\"Select Time\"\r\n                        selected={this.state.date}\r\n                        onChange={(date) =>{ this.setState({date})}}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeIntervals={15}\r\n                        timeCaption=\"time\"\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                    />\r\n           \r\n            <button \r\n            onClick={()=>{this.props.Action_creator_add_Reminder(\r\n                this.state.text,this.state.date)\r\n                this.setState({text:\"\",date:''})\r\n            }}\r\n            className=\"btn btn-primary btn-block\">Add Reminder</button>\r\n            <button \r\n            onClick={()=>this.props.Action_creator_CLEARE_Reminders()}\r\n            \r\n            className=\"btn btn-block btn-danger\">Cleare Reminders</button>\r\n\r\n\r\n            {this.render_reminder()}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//connect action creator with reducer {Action_creator_add_Reminder}\r\n//and to connect reducer with app  \r\nexport default connect(state =>\r\n{\r\n\r\n    return {\r\n        reminders : state\r\n    }\r\n},{Action_creator_add_Reminder,Action_creator_REMOVE_Reminder,Action_creator_CLEARE_Reminders}) (App);","import {ADD_REMINDER, REMOVE_REMINDER, CLEARE_REMINDERS} from '../Action Types/index'\r\nexport const Action_creator_add_Reminder = (text,date)=>\r\n{\r\n    const action = {\r\n\r\n    type : ADD_REMINDER,\r\n    text,\r\n    date\r\n\r\n    }\r\n    console.log(\"data\",action)\r\n    return action;\r\n}\r\nexport const  Action_creator_REMOVE_Reminder=(id)=>{\r\n    const action={\r\n        type:REMOVE_REMINDER,\r\n        id\r\n    }\r\n    console.log(\"REMOVED\",action);\r\n    return action;\r\n}\r\nexport const  Action_creator_CLEARE_Reminders=()=>{\r\n    const action={\r\n        type:CLEARE_REMINDERS,\r\n        \r\n    }\r\n    console.log(\"CLARED\",action);\r\n    return action;\r\n}","import React from 'react'\r\nimport Reactdom from 'react-dom'\r\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css'\r\nimport {Provider} from 'react-redux'\r\nimport {createStore} from \"redux\"\r\nimport Red1 from './reducers/index'\r\nimport App from './components/App'\r\n\r\n\r\nconst store = createStore(Red1);\r\nReactdom.render(\r\n\r\n\r\n    <Provider store={store}><App/></Provider>\r\n\r\n    ,document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}